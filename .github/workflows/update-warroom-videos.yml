name: Update War Room Videos

on:
  schedule:
    # Run at 5 AM, 11 AM, 5 PM, and 11 PM CST (11:00, 17:00, 23:00, 05:00 UTC)
    - cron: '0 5,11,17,23 * * *'
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # This gives the workflow permission to push changes

jobs:
  update-videos:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        sparse-checkout: |
          requirements.txt
          scripts/
          warroom-videos.json
    
    - name: Debug directory
      run: |
        pwd
        ls -la
        echo "Current directory contents:"
        ls -R
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers and dependencies
      run: |
        # Install Playwright browser
        playwright install chromium
        # Install browser dependencies using Playwright's own script
        npx playwright install-deps chromium
    
    - name: Run video updater script
      id: update_videos
      run: |
        echo "Starting video update check at $(date)"
        # Create warroom-videos.json if it doesn't exist
        if [ ! -f warroom-videos.json ]; then
          echo '{"last_updated": "", "videos": []}' > warroom-videos.json
        fi
        # Capture the script output
        OUTPUT=$(python scripts/warroom_video_updater.py)
        echo "$OUTPUT"
        # Save the last line of output for the status
        echo "script_output<<EOF" >> $GITHUB_OUTPUT
        echo "$OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        echo "Video check completed at $(date)"
    
    - name: Configure Git
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
    
    - name: Check for changes and commit
      id: check_changes
      run: |
        if [ ! -f warroom-videos.json ]; then
          echo "Error: warroom-videos.json does not exist!"
          exit 1
        fi
        if git diff --quiet warroom-videos.json; then
          echo "No new videos found at $(date)"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "New videos found! Committing changes..."
          git add warroom-videos.json
          git commit -m "Auto-update warroom videos [skip ci]"
          git push
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Trigger Cloudflare Pages deployment
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        echo "Triggering Cloudflare Pages deployment..."
        RESPONSE=$(curl -X POST "https://api.cloudflare.com/client/v4/pages/webhooks/deploy_hooks/${{ secrets.CLOUDFLARE_DEPLOY_HOOK }}" -w "\n%{http_code}")
        HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
        BODY=$(echo "$RESPONSE" | head -n1)
        echo "Cloudflare API Response: $BODY"
        echo "HTTP Status Code: $HTTP_STATUS"
        if [ "$HTTP_STATUS" -ne 200 ]; then
          echo "Error: Cloudflare deployment failed with status $HTTP_STATUS"
          exit 1
        fi
        echo "Cloudflare deployment triggered successfully"
    
    - name: Create status comment
      uses: actions/github-script@v6
      with:
        script: |
          const date = new Date().toISOString();
          const hasChanges = '${{ steps.check_changes.outputs.has_changes }}' === 'true';
          const scriptOutput = `${{ steps.update_videos.outputs.script_output }}`;
          
          const message = hasChanges 
            ? `✅ Successfully updated videos at ${date}\n\n${scriptOutput}`
            : `ℹ️ No new videos found at ${date}\n\n${scriptOutput}`;
          
          console.log(message); 